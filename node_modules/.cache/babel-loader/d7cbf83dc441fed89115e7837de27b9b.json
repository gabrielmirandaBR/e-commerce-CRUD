{"ast":null,"code":"import { getCategoriesProducts, getComputerProducts, getFilteredProducts } from '../../services/MLAPI';\nexport const REQUEST_PRODUCTS = 'REQUEST_PRODUCTS';\nexport const REQUEST_PRODUCTS_SUCCESS = 'REQUEST_PRODUCTS_SUCCESS';\nexport const REQUEST_PRODUCTS_ERROR = 'REQUEST_PRODUCTS_ERROR';\nexport const REQUEST_FILTERED_PRODUCTS_SUCCESS = 'REQUEST_FILTERED_PRODUCTS_SUCCESS';\nexport const GET_PRODUCTS_DETAILS = 'GET_PRODUCTS_DETAILS';\nexport const REQUEST_CATEGORIES = 'REQUEST_CATEGORIES';\nexport const REQUEST_CATEGORIES_SUCCESS = 'REQUEST_CATEGORIES_SUCCESS';\nexport const REQUEST_CATEGORIES_ERROR = 'REQUEST_CATEGORIES_ERROR';\nexport function requestProducts() {\n  return {\n    type: REQUEST_PRODUCTS\n  };\n}\nexport function requestProductsSuccess(data) {\n  return {\n    type: REQUEST_PRODUCTS_SUCCESS,\n    data\n  };\n}\nexport function requestProductsError(error) {\n  return {\n    type: REQUEST_PRODUCTS_ERROR,\n    error\n  };\n}\nexport function requestProductsFilteredSuccess(data) {\n  return {\n    type: REQUEST_FILTERED_PRODUCTS_SUCCESS,\n    data\n  };\n}\nexport function getProductDetails(item) {\n  return {\n    type: GET_PRODUCTS_DETAILS,\n    item\n  };\n}\nexport function requestCategories() {\n  return {\n    type: REQUEST_CATEGORIES\n  };\n}\n;\nexport function requestCategoriesSuccess(data) {\n  return {\n    type: REQUEST_CATEGORIES_SUCCESS,\n    data\n  };\n}\n;\nexport function requestCategoriesError(error) {\n  return {\n    type: REQUEST_CATEGORIES_ERROR,\n    error\n  };\n}\n;\nexport function fetchProducts() {\n  return async dispatch => {\n    try {\n      dispatch(requestProducts()); // isFetching is true\n\n      const data = await getComputerProducts();\n      dispatch(requestProductsSuccess(data)); // altera estado products\n    } catch (error) {\n      dispatch(requestProductsError(error)); // altera estado products\n    }\n  };\n}\nexport function fetchFilteredProducts(product) {\n  return async dispatch => {\n    try {\n      dispatch(requestProducts()); // isFetching is true\n\n      const data = await getFilteredProducts(product);\n      dispatch(requestProductsFilteredSuccess(data));\n    } catch (error) {\n      dispatch(requestProductsError(error));\n    }\n\n    ;\n  };\n}\n;\nexport function fetchCategoriesProducts() {\n  return async dispatch => {\n    try {\n      dispatch(requestCategories());\n      const data = await getCategoriesProducts();\n      dispatch(requestCategoriesSuccess(data));\n    } catch (error) {\n      dispatch(requestCategoriesError(error));\n    }\n\n    ;\n  };\n}\n;","map":{"version":3,"sources":["/home/gabriel/Documentos/TRYBE/desafios-processos-seletivos/easy_live_challenge/marketplace/src/redux/actions/index.js"],"names":["getCategoriesProducts","getComputerProducts","getFilteredProducts","REQUEST_PRODUCTS","REQUEST_PRODUCTS_SUCCESS","REQUEST_PRODUCTS_ERROR","REQUEST_FILTERED_PRODUCTS_SUCCESS","GET_PRODUCTS_DETAILS","REQUEST_CATEGORIES","REQUEST_CATEGORIES_SUCCESS","REQUEST_CATEGORIES_ERROR","requestProducts","type","requestProductsSuccess","data","requestProductsError","error","requestProductsFilteredSuccess","getProductDetails","item","requestCategories","requestCategoriesSuccess","requestCategoriesError","fetchProducts","dispatch","fetchFilteredProducts","product","fetchCategoriesProducts"],"mappings":"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","sourcesContent":["import { getCategoriesProducts, getComputerProducts, getFilteredProducts } from '../../services/MLAPI';\n\nexport const REQUEST_PRODUCTS = 'REQUEST_PRODUCTS';\nexport const REQUEST_PRODUCTS_SUCCESS = 'REQUEST_PRODUCTS_SUCCESS';\nexport const REQUEST_PRODUCTS_ERROR = 'REQUEST_PRODUCTS_ERROR';\nexport const REQUEST_FILTERED_PRODUCTS_SUCCESS =\n\t'REQUEST_FILTERED_PRODUCTS_SUCCESS';\nexport const GET_PRODUCTS_DETAILS = 'GET_PRODUCTS_DETAILS';\nexport const REQUEST_CATEGORIES = 'REQUEST_CATEGORIES';\nexport const REQUEST_CATEGORIES_SUCCESS = 'REQUEST_CATEGORIES_SUCCESS';\nexport const REQUEST_CATEGORIES_ERROR = 'REQUEST_CATEGORIES_ERROR';\n\nexport function requestProducts() {\n\treturn {\n\t\ttype: REQUEST_PRODUCTS,\n\t};\n}\n\nexport function requestProductsSuccess(data) {\n\treturn {\n\t\ttype: REQUEST_PRODUCTS_SUCCESS,\n\t\tdata,\n\t};\n}\n\nexport function requestProductsError(error) {\n\treturn {\n\t\ttype: REQUEST_PRODUCTS_ERROR,\n\t\terror,\n\t};\n}\n\nexport function requestProductsFilteredSuccess(data) {\n\treturn {\n\t\ttype: REQUEST_FILTERED_PRODUCTS_SUCCESS,\n\t\tdata,\n\t};\n}\n\nexport function getProductDetails(item) {\n\treturn {\n\t\ttype: GET_PRODUCTS_DETAILS,\n\t\titem,\n\t};\n}\n\nexport function requestCategories() {\n\treturn {\n\t\ttype: REQUEST_CATEGORIES,\n\t};\n};\n\nexport function requestCategoriesSuccess(data) {\n\treturn {\n\t\ttype: REQUEST_CATEGORIES_SUCCESS,\n\t\tdata,\n\t};\n};\n\nexport function requestCategoriesError(error) {\n\treturn {\n\t\ttype: REQUEST_CATEGORIES_ERROR,\n\t\terror,\n\t};\n};\n\nexport function fetchProducts() {\n\treturn async (dispatch) => {\n\t\ttry {\n\t\t\tdispatch(requestProducts()); // isFetching is true\n\t\t\tconst data = await getComputerProducts();\n\t\t\tdispatch(requestProductsSuccess(data)); // altera estado products\n\t\t} catch (error) {\n\t\t\tdispatch(requestProductsError(error)); // altera estado products\n\t\t}\n\t};\n}\n\nexport function fetchFilteredProducts(product) {\n\treturn async (dispatch) => {\n\t\ttry {\n\t\t\tdispatch(requestProducts()); // isFetching is true\n\t\t\tconst data = await getFilteredProducts(product);\n\t\t\tdispatch(requestProductsFilteredSuccess(data));\n\t\t} catch (error) {\n\t\t\tdispatch(requestProductsError(error));\n\t\t};\n\t};\n};\n\nexport function fetchCategoriesProducts() {\n\treturn async (dispatch) => {\n\t\ttry {\n\t\t\tdispatch(requestCategories());\n\t\t\tconst data = await getCategoriesProducts();\n\t\t\tdispatch(requestCategoriesSuccess(data))\n\t\t} catch (error) {\n\t\t\tdispatch(requestCategoriesError(error))\n\t\t};\n\t};\n};"]},"metadata":{},"sourceType":"module"}