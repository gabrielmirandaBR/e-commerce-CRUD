{"ast":null,"code":"var _jsxFileName = \"/home/gabriel/Documentos/TRYBE/desafios-processos-seletivos/easy_live_challenge/marketplace/src/components/ListCategories.jsx\";\nimport { Button } from 'react-bootstrap';\nimport propTypes from 'prop-types';\nimport '../styles/ListCategories.css';\nimport { connect } from 'react-redux';\nimport { fetchFilteredProducts } from '../redux/actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ListCategories({\n  categories,\n  fetchFilteredItems\n}) {\n  const NUMBER_OF_CATEGORIES = 12;\n\n  function handleClick(category) {\n    fetchFilteredItems(category);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"categories\",\n    children: categories.slice(0, NUMBER_OF_CATEGORIES).map(category => /*#__PURE__*/_jsxDEV(Button, {\n      onClick: event => handleClick(event.target.name),\n      name: category.name,\n      type: \"button\",\n      variant: \"light\",\n      style: {\n        backgroundColor: 'rgb(248, 249, 250)',\n        border: 'none',\n        marginRight: '5px',\n        borderRadius: '30px',\n        fontSize: '0.75rem',\n        minWidth: '75px',\n        padding: '5px'\n      },\n      children: category.name\n    }, category.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 3\n  }, this);\n}\n\n_c = ListCategories;\n\nconst mapDispatchToProps = dispatch => ({\n  fetchFilteredItems: product => dispatch(fetchFilteredProducts(product))\n});\n\nListCategories.propTypes = {\n  categories: propTypes.arrayOf(propTypes.object),\n  fetchFilteredItems: propTypes.func.isRequired\n};\nListCategories.defaultProps = {\n  categories: []\n};\nexport default connect(null, mapDispatchToProps)(ListCategories);\n\nvar _c;\n\n$RefreshReg$(_c, \"ListCategories\");","map":{"version":3,"sources":["/home/gabriel/Documentos/TRYBE/desafios-processos-seletivos/easy_live_challenge/marketplace/src/components/ListCategories.jsx"],"names":["Button","propTypes","connect","fetchFilteredProducts","ListCategories","categories","fetchFilteredItems","NUMBER_OF_CATEGORIES","handleClick","category","slice","map","event","target","name","backgroundColor","border","marginRight","borderRadius","fontSize","minWidth","padding","id","mapDispatchToProps","dispatch","product","arrayOf","object","func","isRequired","defaultProps"],"mappings":";AAAA,SAASA,MAAT,QAAuB,iBAAvB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAO,8BAAP;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,qBAAT,QAAsC,kBAAtC;;;AAEA,SAASC,cAAT,CAAwB;AAAEC,EAAAA,UAAF;AAAcC,EAAAA;AAAd,CAAxB,EAA4D;AAC3D,QAAMC,oBAAoB,GAAG,EAA7B;;AAEC,WAASC,WAAT,CAAqBC,QAArB,EAA+B;AAC7BH,IAAAA,kBAAkB,CAACG,QAAD,CAAlB;AACD;;AAEF,sBACC;AAAS,IAAA,SAAS,EAAC,YAAnB;AAAA,cACEJ,UAAU,CAACK,KAAX,CAAiB,CAAjB,EAAoBH,oBAApB,EAA0CI,GAA1C,CAA+CF,QAAD,iBAC9C,QAAC,MAAD;AAEM,MAAA,OAAO,EAAGG,KAAD,IAAWJ,WAAW,CAACI,KAAK,CAACC,MAAN,CAAaC,IAAd,CAFrC;AAGM,MAAA,IAAI,EAAEL,QAAQ,CAACK,IAHrB;AAIC,MAAA,IAAI,EAAC,QAJN;AAKC,MAAA,OAAO,EAAC,OALT;AAMC,MAAA,KAAK,EAAE;AACNC,QAAAA,eAAe,EAAE,oBADX;AAENC,QAAAA,MAAM,EAAE,MAFF;AAGNC,QAAAA,WAAW,EAAE,KAHP;AAINC,QAAAA,YAAY,EAAE,MAJR;AAKNC,QAAAA,QAAQ,EAAE,SALJ;AAMAC,QAAAA,QAAQ,EAAE,MANV;AAOAC,QAAAA,OAAO,EAAE;AAPT,OANR;AAAA,gBAgBEZ,QAAQ,CAACK;AAhBX,OACWL,QAAQ,CAACa,EADpB;AAAA;AAAA;AAAA;AAAA,YADA;AADF;AAAA;AAAA;AAAA;AAAA,UADD;AAwBA;;KA/BQlB,c;;AAiCT,MAAMmB,kBAAkB,GAAIC,QAAD,KAAe;AACzClB,EAAAA,kBAAkB,EAAGmB,OAAD,IAAaD,QAAQ,CAACrB,qBAAqB,CAACsB,OAAD,CAAtB;AADA,CAAf,CAA3B;;AAIArB,cAAc,CAACH,SAAf,GAA2B;AAC1BI,EAAAA,UAAU,EAAEJ,SAAS,CAACyB,OAAV,CAAkBzB,SAAS,CAAC0B,MAA5B,CADc;AAEzBrB,EAAAA,kBAAkB,EAAEL,SAAS,CAAC2B,IAAV,CAAeC;AAFV,CAA3B;AAKAzB,cAAc,CAAC0B,YAAf,GAA8B;AAC7BzB,EAAAA,UAAU,EAAE;AADiB,CAA9B;AAGA,eAAeH,OAAO,CAAC,IAAD,EAAOqB,kBAAP,CAAP,CAAkCnB,cAAlC,CAAf","sourcesContent":["import { Button } from 'react-bootstrap';\nimport propTypes from 'prop-types';\n\nimport '../styles/ListCategories.css'\nimport { connect } from 'react-redux';\nimport { fetchFilteredProducts } from '../redux/actions';\n\nfunction ListCategories({ categories, fetchFilteredItems }) {\n\tconst NUMBER_OF_CATEGORIES = 12;\n\n  function handleClick(category) {\n    fetchFilteredItems(category)\n  }\n \n\treturn (\n\t\t<section className=\"categories\">\n\t\t\t{categories.slice(0, NUMBER_OF_CATEGORIES).map((category) => (\n\t\t\t\t<Button\n          key={category.id}\n          onClick={(event) => handleClick(event.target.name)}\n          name={category.name}\n\t\t\t\t\ttype=\"button\"\n\t\t\t\t\tvariant=\"light\"\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\tbackgroundColor: 'rgb(248, 249, 250)',\n\t\t\t\t\t\tborder: 'none',\n\t\t\t\t\t\tmarginRight: '5px',\n\t\t\t\t\t\tborderRadius: '30px',\n\t\t\t\t\t\tfontSize: '0.75rem',\n            minWidth: '75px',\n            padding: '5px',\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t{category.name}\n\t\t\t\t</Button>\n\t\t\t))}\n\t\t</section>\n\t);\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n\tfetchFilteredItems: (product) => dispatch(fetchFilteredProducts(product)),\n});\n\nListCategories.propTypes = {\n\tcategories: propTypes.arrayOf(propTypes.object),\n  fetchFilteredItems: propTypes.func.isRequired,\n};\n\nListCategories.defaultProps = {\n\tcategories: [],\n};\nexport default connect(null, mapDispatchToProps)(ListCategories);\n"]},"metadata":{},"sourceType":"module"}