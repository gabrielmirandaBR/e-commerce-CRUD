{"ast":null,"code":"var _jsxFileName = \"/home/gabriel/Documentos/TRYBE/desafios-processos-seletivos/easy_live_challenge/marketplace/src/components/FormAvaliation.jsx\";\nimport { Button, Card, Form } from \"react-bootstrap\";\nimport propTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction FormAvaliation({\n  handleSubmit,\n  name,\n  setName,\n  email,\n  setEmail,\n  evaluation,\n  setEvaluation,\n  comment,\n  setComment\n}) {\n  return /*#__PURE__*/_jsxDEV(Card, {\n    style: {\n      borderRadius: '30px',\n      backgroundColor: '#f8f9fa'\n    },\n    children: /*#__PURE__*/_jsxDEV(Card.Body, {\n      children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n        className: \"avaliation__title\",\n        children: \"Avalia\\xE7\\xF5es do produto\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          controlId: \"exampleForm.ControlInput1\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Nome\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            className: \"mb-3\",\n            type: \"text\",\n            value: name,\n            onChange: event => setName(event.target.value),\n            placeholder: \"nome@exemplo.com\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"email\",\n            value: email,\n            onChange: event => setEmail(event.target.value),\n            placeholder: \"nome@exemplo.com\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Avalia\\xE7\\xE3o\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"avaliation__range\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Ruim\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Mediana\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"\\xD3tima\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          className: \"mb-3\",\n          value: evaluation,\n          onChange: event => setEvaluation(event.target.value),\n          type: \"range\",\n          min: \"0\",\n          max: \"10\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          controlId: \"exampleForm.ControlTextarea1\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Coment\\xE1rio\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            as: \"textarea\",\n            rows: 3,\n            value: comment,\n            onChange: event => setComment(event.target.value),\n            style: {\n              resize: 'none'\n            },\n            maxLength: \"50\",\n            placeholder: \"M\\xE1ximo de 50 caracteres.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n}\n\n_c = FormAvaliation;\n;\nFormAvaliation.propTypes = {\n  handleSubmit: propTypes.func.isRequired,\n  name: propTypes.string.isRequired,\n  setName: propTypes.func.isRequired,\n  email: propTypes.string.isRequired,\n  setEmail: propTypes.func.isRequired,\n  comment: propTypes.string.isRequired,\n  setComment: propTypes.func.isRequired,\n  evaluation: propTypes.string.isRequired,\n  setEvaluation: propTypes.func.isRequired\n};\nexport default FormAvaliation;\n\nvar _c;\n\n$RefreshReg$(_c, \"FormAvaliation\");","map":{"version":3,"sources":["/home/gabriel/Documentos/TRYBE/desafios-processos-seletivos/easy_live_challenge/marketplace/src/components/FormAvaliation.jsx"],"names":["Button","Card","Form","propTypes","FormAvaliation","handleSubmit","name","setName","email","setEmail","evaluation","setEvaluation","comment","setComment","borderRadius","backgroundColor","event","target","value","resize","func","isRequired","string"],"mappings":"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","sourcesContent":["import { Button, Card, Form } from \"react-bootstrap\";\nimport propTypes from 'prop-types';\n\nfunction FormAvaliation({handleSubmit, name, setName, email, setEmail, evaluation, setEvaluation, comment, setComment }){\n  return (\n    <Card\n      style={{\n        borderRadius: '30px',\n        backgroundColor: '#f8f9fa',\n      }}\n    >\n      <Card.Body>\n        <Card.Title className=\"avaliation__title\">Avaliações do produto</Card.Title>\n        <Form onSubmit={ handleSubmit }>\n          \n          <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlInput1\">\n            <Form.Label>Nome</Form.Label>\n            <Form.Control className=\"mb-3\" type=\"text\" value={name} onChange={(event) => setName(event.target.value)} placeholder=\"nome@exemplo.com\" />\n            <Form.Label>Email</Form.Label>\n            <Form.Control type=\"email\" value={email} onChange={(event) => setEmail(event.target.value)} placeholder=\"nome@exemplo.com\" />\n          </Form.Group>\n          \n            <Form.Label>Avaliação</Form.Label>\n            <div className=\"avaliation__range\">\n              <span>Ruim</span>\n              <span>Mediana</span>\n              <span>Ótima</span>\n            </div>\n            <Form.Control className=\"mb-3\" value={evaluation} onChange={(event) => setEvaluation(event.target.value)} type=\"range\"  min=\"0\" max=\"10\" />\n\n          <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlTextarea1\">\n            <Form.Label>Comentário</Form.Label>\n            <Form.Control \n              as=\"textarea\" \n              rows={3} \n              value={comment} \n              onChange={(event) => setComment(event.target.value)} \n              style={{resize: 'none'}} \n              maxLength=\"50\" \n              placeholder=\"Máximo de 50 caracteres.\" />\n          </Form.Group>\n\n          <Button variant=\"primary\" type=\"submit\">\n            Submit\n          </Button>\n        </Form>\n      </Card.Body>\n    </Card>\n  );\n};\n\nFormAvaliation.propTypes = {\n  handleSubmit: propTypes.func.isRequired,\n  name: propTypes.string.isRequired,\n  setName: propTypes.func.isRequired,\n  email: propTypes.string.isRequired,\n  setEmail: propTypes.func.isRequired,\n  comment: propTypes.string.isRequired,\n  setComment: propTypes.func.isRequired,\n  evaluation: propTypes.string.isRequired,\n  setEvaluation: propTypes.func.isRequired,\n}\n\n\n\nexport default FormAvaliation;"]},"metadata":{},"sourceType":"module"}