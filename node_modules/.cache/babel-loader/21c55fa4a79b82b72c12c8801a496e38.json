{"ast":null,"code":"var _jsxFileName = \"/home/gabriel/Documentos/TRYBE/desafios-processos-seletivos/easy_live_challenge/marketplace/src/components/FormAvaliation.jsx\";\nimport { Button, Card, Form } from 'react-bootstrap';\nimport propTypes from 'prop-types';\nimport '../styles/FormAvaliation.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction FormAvaliation({\n  handleSubmit,\n  name,\n  setName,\n  email,\n  setEmail,\n  evaluation,\n  setEvaluation,\n  comment,\n  setComment\n}) {\n  if (email === '') {\n    setEmail('Não informado');\n  }\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    style: {\n      borderRadius: '30px',\n      backgroundColor: '#f8f9fa'\n    },\n    children: /*#__PURE__*/_jsxDEV(Card.Body, {\n      children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n        className: \"avaliation__title\",\n        children: \"Avalia\\xE7\\xF5es do produto\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          controlId: \"exampleForm.ControlInput1\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Nome\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            className: \"mb-3\",\n            type: \"text\",\n            value: name,\n            onChange: event => setName(event.target.value),\n            placeholder: \"nome@exemplo.com\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"email\",\n            value: email,\n            onChange: event => setEmail(event.target.value),\n            placeholder: \"nome@exemplo.com\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Avalia\\xE7\\xE3o\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"avaliation__range\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Ruim\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Mediana\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"\\xD3tima\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          className: \"mb-3\",\n          value: evaluation,\n          onChange: event => setEvaluation(event.target.value),\n          type: \"range\",\n          min: \"0\",\n          max: \"10\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          controlId: \"exampleForm.ControlTextarea1\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Coment\\xE1rio\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            as: \"textarea\",\n            rows: 3,\n            value: comment,\n            onChange: event => setComment(event.target.value),\n            style: {\n              resize: 'none'\n            },\n            maxLength: \"50\",\n            placeholder: \"M\\xE1ximo de 50 caracteres.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 3\n  }, this);\n}\n\n_c = FormAvaliation;\nFormAvaliation.propTypes = {\n  handleSubmit: propTypes.func.isRequired,\n  name: propTypes.string.isRequired,\n  setName: propTypes.func.isRequired,\n  email: propTypes.string.isRequired,\n  setEmail: propTypes.func.isRequired,\n  comment: propTypes.string.isRequired,\n  setComment: propTypes.func.isRequired,\n  evaluation: propTypes.string.isRequired,\n  setEvaluation: propTypes.func.isRequired\n};\nexport default FormAvaliation;\n\nvar _c;\n\n$RefreshReg$(_c, \"FormAvaliation\");","map":{"version":3,"sources":["/home/gabriel/Documentos/TRYBE/desafios-processos-seletivos/easy_live_challenge/marketplace/src/components/FormAvaliation.jsx"],"names":["Button","Card","Form","propTypes","FormAvaliation","handleSubmit","name","setName","email","setEmail","evaluation","setEvaluation","comment","setComment","borderRadius","backgroundColor","event","target","value","resize","func","isRequired","string"],"mappings":"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","sourcesContent":["import { Button, Card, Form } from 'react-bootstrap';\nimport propTypes from 'prop-types';\n\nimport '../styles/FormAvaliation.css';\n\nfunction FormAvaliation({\n\thandleSubmit,\n\tname,\n\tsetName,\n\temail,\n\tsetEmail,\n\tevaluation,\n\tsetEvaluation,\n\tcomment,\n\tsetComment,\n}) {\n\n  if(email === '') {\n    setEmail('Não informado')\n  }\n\treturn (\n\t\t<Card\n\t\t\tstyle={{\n\t\t\t\tborderRadius: '30px',\n\t\t\t\tbackgroundColor: '#f8f9fa',\n\t\t\t}}\n\t\t>\n\t\t\t<Card.Body>\n\t\t\t\t<Card.Title className=\"avaliation__title\">\n\t\t\t\t\tAvaliações do produto\n\t\t\t\t</Card.Title>\n\t\t\t\t<Form onSubmit={handleSubmit}>\n\t\t\t\t\t<Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlInput1\">\n\t\t\t\t\t\t<Form.Label>Nome</Form.Label>\n\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\tclassName=\"mb-3\"\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tvalue={name}\n\t\t\t\t\t\t\tonChange={(event) => setName(event.target.value)}\n\t\t\t\t\t\t\tplaceholder=\"nome@exemplo.com\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Form.Label>Email</Form.Label>\n\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\ttype=\"email\"\n\t\t\t\t\t\t\tvalue={email}\n\t\t\t\t\t\t\tonChange={(event) => setEmail(event.target.value)}\n\t\t\t\t\t\t\tplaceholder=\"nome@exemplo.com\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Form.Group>\n\n\t\t\t\t\t<Form.Label>Avaliação</Form.Label>\n\t\t\t\t\t<div className=\"avaliation__range\">\n\t\t\t\t\t\t<span>Ruim</span>\n\t\t\t\t\t\t<span>Mediana</span>\n\t\t\t\t\t\t<span>Ótima</span>\n\t\t\t\t\t</div>\n\t\t\t\t\t<Form.Control\n\t\t\t\t\t\tclassName=\"mb-3\"\n\t\t\t\t\t\tvalue={evaluation}\n\t\t\t\t\t\tonChange={(event) => setEvaluation(event.target.value)}\n\t\t\t\t\t\ttype=\"range\"\n\t\t\t\t\t\tmin=\"0\"\n\t\t\t\t\t\tmax=\"10\"\n\t\t\t\t\t/>\n\n\t\t\t\t\t<Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlTextarea1\">\n\t\t\t\t\t\t<Form.Label>Comentário</Form.Label>\n\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\tas=\"textarea\"\n\t\t\t\t\t\t\trows={3}\n\t\t\t\t\t\t\tvalue={comment}\n\t\t\t\t\t\t\tonChange={(event) => setComment(event.target.value)}\n\t\t\t\t\t\t\tstyle={{ resize: 'none' }}\n\t\t\t\t\t\t\tmaxLength=\"50\"\n\t\t\t\t\t\t\tplaceholder=\"Máximo de 50 caracteres.\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Form.Group>\n\n\t\t\t\t\t<Button variant=\"primary\" type=\"submit\">\n\t\t\t\t\t\tSubmit\n\t\t\t\t\t</Button>\n\t\t\t\t</Form>\n\t\t\t</Card.Body>\n\t\t</Card>\n\t);\n}\n\nFormAvaliation.propTypes = {\n\thandleSubmit: propTypes.func.isRequired,\n\tname: propTypes.string.isRequired,\n\tsetName: propTypes.func.isRequired,\n\temail: propTypes.string.isRequired,\n\tsetEmail: propTypes.func.isRequired,\n\tcomment: propTypes.string.isRequired,\n\tsetComment: propTypes.func.isRequired,\n\tevaluation: propTypes.string.isRequired,\n\tsetEvaluation: propTypes.func.isRequired,\n};\n\nexport default FormAvaliation;\n"]},"metadata":{},"sourceType":"module"}